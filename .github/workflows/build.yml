name: Build
on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'docs'
      - '.github/workflows/deploy.yml'
      - '.github/workflows/docs.yml'
    tags-ignore:
      - '**'
  # only run on branch push
  # ignore tags
  # ignore changes to docs
  # ignore changes to CI files except for this one

jobs:
  build_sdist:
    if: ${{ github.event_name == 'push' }}
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Build SDist
        run: pipx run build --sdist
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels
    strategy:
      matrix: 
        os: [windows-latest, macOS-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Get CMake
        uses: lukka/get-cmake@v3.28.0
      
      - name: Setup build tools on macOS
        run: brew install automake autoconf libtool
        if: ${{ matrix.os == 'macOS-latest' }}
      
      - name: Get vcpkg commit ID from manifest
        shell: bash
        run: |
          {
            echo 'vcpkg_json<<EOF'
            cat vcpkg.json
            echo 'EOF'
          } >> "$GITHUB_ENV"

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ${{ fromJson(env.vcpkg_json).builtin-baseline }}
          runVcpkgInstall: false
    
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_ENVIRONMENT_PASS_LINUX: CI
          CIBW_BEFORE_ALL_LINUX: yum install -y zip
          CIBW_BUILD_VERBOSITY: 3
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
  
  merge_artifacts:
    name: Merge wheel artifacts
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - name: Merge artifacts
        uses: actions/upload-artifact/merge@v4
        with: 
          name: wheels
          pattern: wheels-*
          delete-merged: true
